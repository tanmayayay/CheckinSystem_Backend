#spring.datasource.url=jdbc:mysql://localhost:3306/CheckinDB
#spring.datasource.username=root
#spring.datasource.password=Office@12345
##spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#logging.level.org.springframework.security=DEBUG
##
spring.datasource.url=jdbc:mysql:///military?cloudSqlInstance=exalted-slice-419020:northamerica-northeast2:checkinsystemdb&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=root;
spring.datasource.username=root
spring.datasource.password=root
####spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
##logging.level.org.springframework.security=DEBUG
##
#spring.cloud.gcp.sql.database-name=military
#spring.cloud.gcp.sql.instance-connection-name=exalted-slice-419020:northamerica-northeast2:checkinsystemdb
## So app starts despite "table already exists" errors.
#spring.datasource.continue-on-error=true
## Enforces database initialization
#spring.datasource.initialization-mode=always
#spring.cloud.gcp.project-id=exalted-slice-419020
spring.cloud.gcp.credentials.location=/Users/tanmayayay/.config/gcloud/application_default_credentials.json
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect

spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
spring.mail.password=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
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
